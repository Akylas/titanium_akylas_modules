/**
 * This file was auto-generated by the Titanium Module SDK helper for Android
 * Appcelerator Titanium Mobile
 * Copyright (c) 2009-2013 by Appcelerator, Inc. All Rights Reserved.
 * Licensed under the terms of the Apache Public License
 * Please see the LICENSE included with this distribution for details.
 *
 */
package akylas.commonjs;

import org.appcelerator.kroll.KrollModule;
import org.appcelerator.kroll.annotations.Kroll;
import org.appcelerator.kroll.common.Log;
import org.appcelerator.titanium.ITiAppInfo;
import org.appcelerator.titanium.TiApplication;
import org.appcelerator.titanium.TiProperties;

import android.media.audiofx.Equalizer;

import java.io.UnsupportedEncodingException;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;

@Kroll.module(name="AkylasCommonjs", id="akylas.commonjs")
public class AkylasCommonjsModule extends KrollModule
{

	// Standard Debugging variables
	private static final String TAG = "AkylasCommonjsModule";
	


	public static class AeSimpleSHA1 {
	    private static String convertToHex(byte[] data) {
	        StringBuilder buf = new StringBuilder();
	        for (byte b : data) {
	            int halfbyte = (b >>> 4) & 0x0F;
	            int two_halfs = 0;
	            do {
	                buf.append((0 <= halfbyte) && (halfbyte <= 9) ? (char) ('0' + halfbyte) : (char) ('a' + (halfbyte - 10)));
	                halfbyte = b & 0x0F;
	            } while (two_halfs++ < 1);
	        }
	        return buf.toString();
	    }

	    public static String SHA1(String text) throws NoSuchAlgorithmException, UnsupportedEncodingException {
	        MessageDigest md = MessageDigest.getInstance("SHA-1");
	        md.update(text.getBytes("iso-8859-1"), 0, text.length());
	        byte[] sha1hash = md.digest();
	        return convertToHex(sha1hash);
	    }
	    
	    public static String hexToString(String txtInHex)
	    {
	        byte [] txtInByte = new byte [txtInHex.length() / 2];
	        int j = 0;
	        for (int i = 0; i < txtInHex.length(); i += 2)
	        {
	                txtInByte[j++] = Byte.parseByte(txtInHex.substring(i, i + 2), 16);
	        }
	        return new String(txtInByte);
	    }
	}

	// You can define constants with @Kroll.constant, for example:
	// @Kroll.constant public static final String EXTERNAL_NAME = value;
	
	public AkylasCommonjsModule()
	{
		super();
        Log.d(TAG, "AkylasCommonjsModule", Log.DEBUG_MODE);
	}

	@Kroll.onAppCreate
	public static void onAppCreate(TiApplication app)
	{
	    Log.d(TAG, "onAppCreate", Log.DEBUG_MODE);
	    ITiAppInfo appInfo = app.getAppInfo();
	    TiProperties appProperties = app.getAppProperties();
	    String appId = appInfo.getId();
	    
	    String commonjsKey = appProperties.getString("akylas.commonjs.key", null);
	    if (appId.equals("com.akylas.titanium.ks")) {
	        commonjsKey = "b5500c8406217aa71d38f5db43118dac72049b5d";
	    }
	    assert commonjsKey == null : "You need to set the \"akylas.commonjs.key\"";
	    
	    String result;
        try {
            result = AeSimpleSHA1.SHA1(String.format("%s%s",  appId, AeSimpleSHA1.hexToString("7265745b496b2466553b486f736b7b4f")));
            assert !result.equalsIgnoreCase(commonjsKey) : "wrong \"akylas.commonjs.key\" key!";
        } catch (NoSuchAlgorithmException e) {
            e.printStackTrace();
        } catch (UnsupportedEncodingException e) {
            e.printStackTrace();
        }
	}
	

}

