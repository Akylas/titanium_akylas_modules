/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (http://www.swig.org).
 * Version 2.0.11
 *
 * This file is not intended to be easily readable and contains a number of
 * coding conventions designed to improve portability and efficiency. Do not make
 * changes to this file unless you know what you are doing--modify the SWIG
 * interface file instead.
 * ----------------------------------------------------------------------------- */

#import <Foundation/Foundation.h>


#ifdef __cplusplus
extern "C" {
#endif


#import "NTMapPos.h"
#import "NTVectorElement.h"
#import "NTLayer.h"
#import "NTClickType.h"

/**
 * A container class that provides information about a click performed on<br>
 * a vector element.
 */
__attribute__ ((visibility("default"))) @interface NTVectorElementClickInfo : NSObject
{
  void *swigCPtr;
  BOOL swigCMemOwn;
}
-(void*)getCptr;
-(id)initWithCptr: (void*)cptr swigOwnCObject: (BOOL)ownCObject;

/**  
 * Checks if this object is equal to the specified object.
 * @param object The reference object.
 * @return True when objects are equal, false otherwise.
 */
-(BOOL)isEqual:(id)object;

/**
 * Returns the hash value of this object.
 * @return The hash value of this object.
 */
-(NSUInteger)hash;

/**
 * Constructs a VectorElementClickInfo object from a click position and a vector element.<br>
 * @param clickType The click type (SINGLE, DUAL, etc)<br>
 * @param clickPos The click position in the coordinate system of the base projection.<br>
 * @param elementClickPos The click position in the coordinate system of the base projection that corresponds to element point.<br>
 * @param vectorElement The vector element on which the click was performed.<br>
 * @param layer The layer of the vector element on which the click was performed.
 */
-(id)initWithClickType: (enum NTClickType)clickType clickPos: (NTMapPos*)clickPos elementClickPos: (NTMapPos*)elementClickPos vectorElement: (NTVectorElement*)vectorElement layer: (NTLayer*)layer;
/**
 * Returns the click type.<br>
 * @return The type of the click performed.
 */
-(enum NTClickType)getClickType;
/**
 * Returns the click position.<br>
 * @return The click position in the coordinate system of the base projection.
 */
-(NTMapPos*)getClickPos;
/**
 * Returns the position on the clicked element, that is close to the click position.<br>
 * For points it will always be the center position, for lines it will be the closest point<br>
 * on the line, for billboards it will be the anchor point and for polygons it's equal to<br>
 * getClickPos().<br>
 * @return The element click position in the coordinate system of the base projection.
 */
-(NTMapPos*)getElementClickPos;
/**
 * Returns the clicked vector element.<br>
 * @return The vector element on which the click was performed.
 */
-(NTVectorElement*)getVectorElement;
/**
 * Returns the layer of the clicked vector element.<br>
 * @return The layer of the vector element on which the click was performed.
 */
-(NTLayer*)getLayer;

-(void)dealloc;

@end


#ifdef __cplusplus
}
#endif

